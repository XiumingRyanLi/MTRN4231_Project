// generated from rosidl_adapter/resource/action.idl.em
// with input from chess_arm_executor/action/ExecuteMove.action
// generated code does not contain a copyright notice


module chess_arm_executor {
  module action {
    module ExecuteMove_Goal_Constants {
      const uint8 PAWN = 0;
      const uint8 KNIGHT = 1;
      const uint8 BISHOP = 2;
      const uint8 ROOK = 3;
      const uint8 QUEEN = 4;
      const uint8 KING = 5;
    };
    @verbatim (language="comment", text=
      "Goal")
    struct ExecuteMove_Goal {
      string src_square;

      string dst_square;

      @verbatim (language="comment", text=
        "piece type (enum)")
      uint8 piece_type;
    };
    @verbatim (language="comment", text=
      "Result")
    struct ExecuteMove_Result {
      boolean ok;

      string message;

      float z_pick_used;
    };
    @verbatim (language="comment", text=
      "Feedback")
    struct ExecuteMove_Feedback {
      string stage;

      float z_pick_used;
    };
  };
};
